# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gradle:
    if: false
    strategy:
      matrix:
        #        os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Init Git
      - name: Init Git
        run: |
          sudo apt update
          sudo apt install -y git

      # Clone Projector
      - name: clone Projector
        run: |
          git clone --depth 1 --branch v1.8.1 https://github.com/JetBrains/projector-server.git
          git clone --depth 1 --branch v1.7.0 https://github.com/zhipengzuo/projector-client.git
          pwd
          ls -al
          cd projector-server
          ./gradlew :projector-server-jdk17:distZip
          echo "查询打包结果"
          ls -al projector-server-jdk17

      #      - name: Execute Gradle build
      #        run: ./gradlew build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: ProjectorV1.8.1
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/Projector_Build/Projector_Build/projector-server/projector-server-jdk17/build/distibution/


  # This workflow contains a single job called "build"
  build:
    #    if: false
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Init ENV
      - name: Init ENV
        run: |
          sudo apt update
          sudo apt install -y git
#          sudo apt-get update -y
          sudo apt-get install -y wget 
          sudo apt-get install -y tar 
          sudo apt-get install -y p7zip-full 
          sudo apt-get install -y libfreetype6 
          sudo apt-get install -y fontconfig 
          sudo apt-get install -y zip 
          sudo apt-get install -y unzip 
          sudo apt-get install -y libgl1-mesa-glx 
          sudo apt-get install -y squashfs-tools
          sudo rm -rf /var/lib/apt/lists/*
            # Init ENV

      # Restore Cache
      - name: Restore cached Primes
        id: cache-primes-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            /home/runner/.m2/repository/
          key: 232.8660.185-repository

      # Clone IC-232 当前版本 232.8962 目标版本  idea/232.8660.185
      - name: Clone IC-232.8660.185
        run: |
          git clone --depth 1 --branch idea/232.8660.185  https://github.com/JetBrains/intellij-community.git
          cd intellij-community
          git clone --depth 1 --branch idea/232.8660.185  https://github.com/JetBrains/android.git
          echo "IC-232.8660.185 clone success"

      # Build IC-232
      - name: Build IC-232
        run: |
          pwd
          cd intellij-community
          ./installers.cmd -Dintellij.build.target.os=all
          echo "Build Success"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: IC-232
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/Projector_Build/Projector_Build/intellij-community/out/idea-ce/artifacts/

      # cache maven repository Once
      - name: Cache IC-232 .m2 repository
        id: cache-primes-save
        uses: actions/cache/save@v3
        with:
          path: |
            /home/runner/.m2/repository/
          key: 232.8660.185-repository